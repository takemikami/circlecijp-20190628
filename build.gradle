buildscript {
  repositories {
    jcenter()
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.5.RELEASE")
    classpath('com.google.cloud.tools:appengine-gradle-plugin:2.+')
  }
}
plugins {
  id 'java'
  id 'war'
  id 'checkstyle'
  id 'pmd'
  id "com.github.spotbugs" version "1.6.9"
}
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.google.cloud.tools.appengine'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
  maven { url 'https://jitpack.io/' }
}
dependencies {
  // SpringBoot
  compileOnly 'javax.servlet:javax.servlet-api:3.1.0'
  compile("org.springframework.boot:spring-boot-starter-web") {
    exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
  }
  providedRuntime "org.springframework.boot:spring-boot-starter-jetty"

  // appengine & objectify
  compile 'com.googlecode.objectify:objectify:6.0.4'
  runtime 'com.github.takemikami:objectify-appengine-memcacheclient:0.0.2'
  runtime 'com.google.appengine:appengine-api-1.0-sdk:+'
}

// appengine deployment settings
appengine {
  deploy {
    projectId = System.getenv("GOOGLE_PROJECT_ID") ?: "gcloud config get-value project".execute().text
    version = System.getenv("CIRCLE_PR_NUMBER") ?: (new Date()).format("yyyyMMdd't'HHmmss")
    promote = "master" == System.getenv("CIRCLE_BRANCH")
  }
}

// check task settings
import com.github.spotbugs.SpotBugsTask

checkstyle {
  toolVersion '8.21'
}
pmd {
  toolVersion '6.10.0'
  sourceSets = [sourceSets.main]
  ruleSets = [
      "category/java/bestpractices.xml",
      "category/java/multithreading.xml",
      "category/java/performance.xml",
      "category/java/security.xml"
  ]
}
tasks.withType(Checkstyle) {
  reports {
    xml.enabled = true
    html.enabled = true
  }
}
tasks.withType(SpotBugsTask) {
  reports {
    xml.enabled = true
    html.enabled = false
  }
}
